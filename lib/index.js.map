{"version":3,"sources":["index.js"],"names":["parse","stringify","parseDefaults","voidTags","closingTags","childlessTags","closingTagAncestorBreakers","includePositions","str","options","Object","assign","arguments","tokens","nodes","ast"],"mappings":";;;;;;QAqBgBA,K,GAAAA,K;QAOAC,S,GAAAA,S;;AA5BhB;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AAQO,IAAMC,wCAAgB;AAC3BC,0BAD2B;AAE3BC,gCAF2B;AAG3BC,oCAH2B;AAI3BC,8DAJ2B;AAK3BC,oBAAkB;AALS,CAAtB;;AAQA,SAASP,KAAT,CAAgBQ,GAAhB,EAAqB;AAC1B,MAAIC,UAAUC,OAAOC,MAAP,CAAcT,aAAd,EAA6BU,UAAU,CAAV,CAA7B,CAAd;AACA,MAAMC,SAAS,qBAAML,GAAN,EAAWC,OAAX,CAAf;AACA,MAAMK,QAAQ,sBAAOD,MAAP,EAAeJ,OAAf,CAAd;AACA,SAAO,sBAASK,KAAT,EAAgBL,OAAhB,CAAP;AACD;;AAEM,SAASR,SAAT,CAAoBc,GAApB,EAAkD;AAAA,MAAzBN,OAAyB,uEAAfP,aAAe;;AACvD,SAAO,uBAAOa,GAAP,EAAYN,OAAZ,CAAP;AACD","file":"index.js","sourcesContent":["import lexer from './lexer'\nimport parser from './parser'\nimport {toHTML} from './stringify'\nimport { formatFS } from './format'\n\nimport {\n  voidTags,\n  closingTags,\n  childlessTags,\n  closingTagAncestorBreakers\n} from './tags'\n\n\nexport const parseDefaults = {\n  voidTags,\n  closingTags,\n  childlessTags,\n  closingTagAncestorBreakers,\n  includePositions: false\n}\n\nexport function parse (str) {\n  let options = Object.assign(parseDefaults, arguments[1])\n  const tokens = lexer(str, options)\n  const nodes = parser(tokens, options)\n  return formatFS(nodes, options)\n}\n\nexport function stringify (ast, options = parseDefaults) {\n  return toHTML(ast, options)\n}\n"]}