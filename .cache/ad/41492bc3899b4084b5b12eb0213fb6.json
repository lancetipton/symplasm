{"id":"index.html","dependencies":[{"name":"./dist/symplasm.js","dynamic":true,"resolved":"/Users/lancetipton/Desktop/programming/symplasm_v2/build/dist/symplasm.js","parent":"/Users/lancetipton/Desktop/programming/symplasm_v2/build/index.html"},{"name":"_css_loader","parent":"/Users/lancetipton/Desktop/programming/symplasm_v2/build/index.html","resolved":"/Users/lancetipton/Desktop/programming/symplasm_v2/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/Users/lancetipton/Desktop/programming/symplasm_v2/package.json","includedInParent":true,"mtime":1544883767535}],"generated":{"html":"<html>\n  <head>\n    <title>Symplasm</title>\n    <style>* {\n        font-family: monospace;\n      }\n\n      .page {\n        display: flex;\n        flex-direction: column;\n      }\n\n      header {\n        display: flex;\n        align-items: center;\n        padding: 0px 20px 0;\n      }\n\n      header h1 {\n        margin: 0;\n        padding-right: 10px;\n      }\n\n      header a {\n        color: #08f;\n        text-decoration: none;\n        padding: 0px 10px;\n      }\n\n      header a:hover {\n        text-decoration: underline;\n      }\n      \n      .description {\n        align-items: center;\n        justify-content: center;\n        padding: 0px 20px;\n      }\n      \n      .converter {\n        display: flex;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n        min-height: 300px;\n      }\n      .converter > div {\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n        align-self: stretch;\n        padding: 0px 20px;\n      }\n\n      .pane {\n        padding: 10px;\n        font-size: 1em;\n        border: none;\n        margin: 0px;\n        outline: none;\n        overflow: auto;\n        background: #f1f1f1;\n        padding: 10px;\n        min-height: 300px;\n      }\n      \n      .pane.exported {\n        min-height: 150px;\n        max-height: 150px;\n      }\n    \n      .pane label {\n        display: block;\n        text-transform: uppercase;\n        color: #555;\n        margin-bottom: 5px;\n      }\n\n      #source {\n        flex: 1;\n        display: flex;\n        align-self: stretch;\n        border: none;\n        background-color: transparent;\n        outline: none;\n        padding: 0px;\n        font-size: inherit;\n        min-height: 300px;\n        width: 350px;\n        font-size: inherit;\n        resize: none;\n      }\n\n      #output {\n        margin: 0;\n        padding: 0;\n      }\n      \n      .display {\n        padding: 0 20px;\n      }</style>\n  </head>\n  <body>\n    <div class=\"page\">\n      <header>\n        <h1>Symplasm</h1>\n        <a href=\"https://github.com/lancetipton/symplasm\">Symplasm on Github</a>\n      </header>\n      <div class=\"description\">\n        <p>\n          Export JSON in vDom format.\n        </p>\n      </div>\n      <div class=\"converter\">\n        <div>\n          <label><b>HTML</b></label>\n          <div class=\"pane pane-source\">\n            <textarea id=\"source\" placeholder=\"<div>HTML to transform</div>\">\n</textarea><input class=\"class-input\" id=\"super-input\" td-update-item=\"true\" name=\"input-to-be-replaced\" autoplay=\"\">\n<div contenteditable=\"\"><br><p>I no longer contenteditable</p></div>\n<div allowfullscreen=\"\"><br><p>allowfullscreen is cased properly</p></div>\n            \n          </div>\n        </div>\n        <div>\n          <label><b>JSON Export</b></label>\n          <div class=\"pane pane-output\">\n            <pre id=\"output\"></pre>\n          </div>\n        </div>\n      </div>\n\n      <br>\n      <br>\n      <br>\n      <br>\n      \n      <div class=\"display\">\n        <div>\n          <label><b>Strig to HTML</b></label>\n          <div class=\"pane pane-source exported\">\n            <div id=\"string-html\"></div>\n          </div>\n          <br>\n          <br>\n          <br>\n          <label><b>Converted to HTML</b></label>\n          <div class=\"pane pane-source exported\">\n            <div id=\"converted-html\"></div>\n          </div>\n          <br>\n          <br>\n          <br>\n          <label><b>Parse Options</b></label>\n          <div class=\"pane pane-output\">\n            <pre id=\"settings\"></pre>\n          </div>\n          <br>\n          <br>\n          <br>\n          <label><b>Stringify Options</b></label>\n          <div class=\"pane pane-output\">\n            <pre id=\"string-opts\"></pre>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n\n\n\n    <script src=\"/148a395036cc175fe9d9410646588f4f.js\"></script>\n    <script>var counter = 0;\n\nvar buttonClick = function buttonClick(event) {\n  console.log('------------------button click------------------');\n  console.log(event);\n};\n\nfunction $(selector) {\n  return document.querySelector(selector);\n}\n\nvar options = {\n  attrCamelCase: true,\n  trim: true,\n  lowerCaseTag: false,\n  comments: false,\n  root: {\n    0: 'article',\n    1: {\n      class: 'foo',\n      style: {\n        backgroundColor: 'red',\n        marginTop: '5px'\n      }\n    },\n    2: [{\n      0: 'div',\n      1: {\n        class: 'added-child'\n      },\n      2: 'Sub-Sub-Added Child'\n    }]\n  },\n  tagConvert: {\n    input: {\n      0: 'input',\n      1: {\n        style: {\n          backgroundColor: 'green',\n          marginTop: '10px'\n        }\n      }\n    },\n    article: 'section',\n    'button.td-button': {\n      0: 'div',\n      1: {\n        class: 'td-button-reaplce-div'\n      },\n      2: [{\n        0: 'div',\n        1: {\n          class: 'sub-added-div'\n        },\n        2: 'Button Text'\n      }]\n    },\n    'input#td-first-input': function inputTdFirstInput(element, key, value, allNodes, children, options) {\n      return {\n        0: 'FSInput',\n        1: {\n          class: 'td-fd-inpu-input'\n        }\n      };\n    },\n    'select[td-name=\"select-name\"]': function selectTdNameSelectName(element, key, value, allNodes, children, options) {\n      return {\n        0: 'TDSelect',\n        1: {\n          class: 'td-changed'\n        }\n      };\n    }\n  },\n  attrKeyConvert: {\n    contenteditable: null,\n    id: {\n      'input, select': function inputSelect(element, key, value, allNodes, children, options) {\n        return 'td-changed';\n      },\n      'input#super-input': 'td-changed'\n    },\n    name: {\n      'input#super-input, select': function inputSuperInputSelect(element, key, value, allNodes, children, options) {\n        return 'td-changed';\n      }\n    }\n  },\n  attrValueConvert: {\n    class: {\n      'button[td-button],div[td-root]': function buttonTdButtonDivTdRoot(element, key, value, allNodes, children, options) {\n        return 'td-changed';\n      }\n    },\n    name: {\n      'input, select': function inputSelect(element, key, value, allNodes, children, options) {\n        return 'td-changed';\n      },\n      'select.class-select': 'td-direct-changed'\n    }\n  },\n  attrKeyAdd: {\n    'added-key-function': {\n      'select[td-name=\"select-name\"]': function selectTdNameSelectName(element, key, value, allNodes, children, options) {\n        return 'select-value';\n      },\n      'input[td-update-item]': function inputTdUpdateItem(element, key, value, allNodes, children, options) {\n        return 'only-input-value';\n      }\n    }\n  }\n};\nvar stringOpts = {\n  attrLowerCase: true,\n  styleAsCss: true\n};\n\nfunction updateOutput() {\n  var html = $('#source').value || '';\n  var code = symplasm.parse(html, options);\n  $('#output').innerText = JSON.stringify(code, null, 2);\n  var htmlString = symplasm.stringify(code, stringOpts);\n  $('#string-html').textContent = htmlString;\n  $('#converted-html').innerHTML = htmlString;\n  $('#settings').innerText = JSON.stringify(options, null, 2);\n  $('#string-opts').innerText = JSON.stringify(stringOpts, null, 2);\n}\n\n$('#source').onkeyup = updateOutput;\nupdateOutput();</script>\n    \n  </body>\n</html>\n"},"hash":"2a8f4415e35f26ef6cd0c464c8b4a931","cacheData":{"env":{}}}